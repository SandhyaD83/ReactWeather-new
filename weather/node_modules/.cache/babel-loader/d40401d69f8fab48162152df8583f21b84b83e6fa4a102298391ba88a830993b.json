{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/Search';\nimport Today from './components/Today';\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useState, useEffect } from 'react';\nimport Hourly from './components/Hourly';\nimport weatherContext from './context/weatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //defining a Array variable to store weather data\n  const [weather, setWeather] = useState({});\n  const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\";\n  //function to fetch data from weather using api and store it in the variable weather\n  const getWeather = async searchTerm => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`);\n      const data = await response.json();\n      console.log(data);\n      setWeather(data);\n      setStr(\"nothing\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log(weather);\n  const [str, setStr] = useState('');\n  const [forecast, setForecast] = useState({});\n  //function to fetch daily forecast of the selected city using lat and lon values\n  const getForecast = async btnName => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`);\n      const forecastData = await response.json();\n      console.log(forecastData);\n      setForecast(forecastData);\n      setStr(btnName);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  //Intially renders London weather\n  useEffect(() => {\n    getWeather(\"london\");\n  }, []);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"weatherContext\", {\n      value: weather,\n      children: weather.main ? /*#__PURE__*/_jsxDEV(Today, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      weatherSearch: getWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      getForecast: getForecast,\n      txt: \"Hourly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      getForecast: getForecast,\n      txt: \"Daily\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      getForecast: getForecast,\n      txt: \"Weekend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), str === \"Hourly\" ? /*#__PURE__*/_jsxDEV(Hourly, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 28\n    }, this) : null, str === \"Daily\" ? /*#__PURE__*/_jsxDEV(Daily, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }, this) : null, str === \"Weekend\" ? /*#__PURE__*/_jsxDEV(Weekend, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BkjNeDGYH27ANnr6tDb307PGkD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Today","Button","Daily","Weekend","useState","useEffect","Hourly","weatherContext","jsxDEV","_jsxDEV","App","_s","weather","setWeather","apiKey","getWeather","searchTerm","response","fetch","data","json","console","log","setStr","e","error","str","forecast","setForecast","getForecast","btnName","coord","lat","lon","forecastData","className","children","value","main","fileName","_jsxFileName","lineNumber","columnNumber","weatherSearch","txt","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js"],"sourcesContent":["\nimport './App.css';\n\nimport Search from './components/Search'\nimport Today from './components/Today'\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useState, useEffect } from 'react'\nimport Hourly from './components/Hourly';\nimport weatherContext from './context/weatherContext';\n\n\n\nfunction App() {\n  //defining a Array variable to store weather data\n  const [weather, setWeather] = useState({})\n\n  const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\"\n  //function to fetch data from weather using api and store it in the variable weather\n  const getWeather = async (searchTerm) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`)\n      const data = await response.json();\n      console.log(data)\n      setWeather(data)\n      setStr(\"nothing\")\n    }\n    catch (e) {\n      console.error(e)\n    }\n\n  }\n  console.log(weather)\n\n\n\n  const [str, setStr] = useState('')\n  const [forecast, setForecast] = useState({})\n  //function to fetch daily forecast of the selected city using lat and lon values\n  const getForecast = async (btnName) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`)\n      const forecastData = await response.json();\n      console.log(forecastData)\n      setForecast(forecastData)\n\n      setStr(btnName)\n    }\n    catch (e) {\n      console.error(e)\n    }\n\n  }\n  //Intially renders London weather\n  useEffect(() => { getWeather(\"london\"); }, [])\n  console.log(forecast)\n\n  return (\n\n\n    <div className=\"App\">\n\n      <weatherContext value={weather} >\n        {weather.main ? <Today /> : null}\n      </weatherContext>\n      <Search weatherSearch={getWeather} />\n\n\n\n\n      {/* {weather.main ? <Today weather={weather} /> : null} */}\n      <Button getForecast={getForecast} txt=\"Hourly\" />\n      <Button getForecast={getForecast} txt=\"Daily\" />\n      <Button getForecast={getForecast} txt=\"Weekend\" />\n      {str === \"Hourly\" ? (<Hourly forecast={forecast} />) : null}\n      {str === \"Daily\" ? (<Daily forecast={forecast} />) : null}\n      {str === \"Weekend\" ? (<Weekend forecast={forecast} />) : null}\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}