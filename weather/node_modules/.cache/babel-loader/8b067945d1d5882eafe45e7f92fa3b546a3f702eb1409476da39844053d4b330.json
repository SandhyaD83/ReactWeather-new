{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/Search';\nimport Today from './components/Today';\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useState, useEffect } from 'react';\nimport Hourly from './components/Hourly';\nimport Example from './components/Example';\nimport { Provider } from './context/WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //defining a Array variable to store weather data\n  const [weather, setWeather] = useState({});\n  const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\";\n  //function to fetch data from weather using api and store it in the variable weather\n  const getWeather = async searchTerm => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`);\n      const data = await response.json();\n      console.log(data);\n      setWeather(data);\n      setStr(\"nothing\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log(weather);\n  const [str, setStr] = useState('');\n  const [forecast, setForecast] = useState({});\n  //function to fetch daily forecast of the selected city using lat and lon values\n  const getForecast = async btnName => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`);\n      const forecastData = await response.json();\n      console.log(forecastData);\n      setForecast(forecastData);\n      setStr(btnName);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  //Intially renders London weather\n  useEffect(() => {\n    getWeather(\"london\");\n  }, []);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        weatherSearch: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), weather.main ? /*#__PURE__*/_jsxDEV(Today, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        getForecast: getForecast,\n        txt: \"Hourly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        getForecast: getForecast,\n        txt: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        getForecast: getForecast,\n        txt: \"Weekend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), str === \"Hourly\" ? /*#__PURE__*/_jsxDEV(Hourly, {\n        forecast: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this) : null, str === \"Daily\" ? /*#__PURE__*/_jsxDEV(Daily, {\n        forecast: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this) : null, str === \"Weekend\" ? /*#__PURE__*/_jsxDEV(Weekend, {\n        forecast: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BkjNeDGYH27ANnr6tDb307PGkD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Today","Button","Daily","Weekend","useState","useEffect","Hourly","Example","Provider","jsxDEV","_jsxDEV","App","_s","weather","setWeather","apiKey","getWeather","searchTerm","response","fetch","data","json","console","log","setStr","e","error","str","forecast","setForecast","getForecast","btnName","coord","lat","lon","forecastData","className","children","weatherSearch","fileName","_jsxFileName","lineNumber","columnNumber","main","txt","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js"],"sourcesContent":["\nimport './App.css';\n\nimport Search from './components/Search'\nimport Today from './components/Today'\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useState, useEffect } from 'react'\nimport Hourly from './components/Hourly';\nimport Example from './components/Example';\nimport { Provider } from './context/WeatherContext'\n\n\n\nfunction App() {\n  //defining a Array variable to store weather data\n  const [weather, setWeather] = useState({})\n\n  const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\"\n  //function to fetch data from weather using api and store it in the variable weather\n  const getWeather = async (searchTerm) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`)\n      const data = await response.json();\n      console.log(data)\n      setWeather(data)\n      setStr(\"nothing\")\n    }\n    catch (e) {\n      console.error(e)\n    }\n\n  }\n  console.log(weather)\n\n\n\n  const [str, setStr] = useState('')\n  const [forecast, setForecast] = useState({})\n  //function to fetch daily forecast of the selected city using lat and lon values\n  const getForecast = async (btnName) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`)\n      const forecastData = await response.json();\n      console.log(forecastData)\n      setForecast(forecastData)\n\n      setStr(btnName)\n    }\n    catch (e) {\n      console.error(e)\n    }\n\n  }\n  //Intially renders London weather\n  useEffect(() => { getWeather(\"london\"); }, [])\n  console.log(forecast)\n\n  return (\n\n\n    <div className=\"App\">\n      <Provider>\n        <Search weatherSearch={getWeather} />\n        {weather.main ? <Today weather={weather} /> : null}\n        {/* <Button getForecast={getForecast} txt=\"Example\" /> */}\n        <Button getForecast={getForecast} txt=\"Hourly\" />\n        <Button getForecast={getForecast} txt=\"Daily\" />\n        <Button getForecast={getForecast} txt=\"Weekend\" />\n        {/* {str === \"Example\" ? (<Example forecast={forecast} />) : null} */}\n        {str === \"Hourly\" ? (<Hourly forecast={forecast} />) : null}\n        {str === \"Daily\" ? (<Daily forecast={forecast} />) : null}\n        {str === \"Weekend\" ? (<Weekend forecast={forecast} />) : null}\n\n\n      </Provider>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}