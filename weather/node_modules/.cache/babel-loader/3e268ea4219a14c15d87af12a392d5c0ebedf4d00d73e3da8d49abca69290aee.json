{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Hourly.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hourly = props => {\n  //mapping through the list array and destructuring it\n  const dailyReport = props.forecast.list.map((_ref, id) => {\n    let {\n      dt_txt,\n      main: {\n        temp_max,\n        temp_min\n      }\n    } = _ref;\n    const dateString = dt_txt;\n    const dateObject = new Date(dateString);\n    const dayOfWeek = dateObject.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }); // Get the day of the week as a string\n    const time = dt_txt.split(' ');\n    console.log(time[1]);\n    const time1 = parseInt(time[1], 10);\n    console.log(dayOfWeek);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: dayOfWeek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: time1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), time1 > 12 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [time1 - 12, \"pm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 32\n      }, this) : time1 === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"12am\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 74\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [time1, \"am\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [temp_max, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [temp_min, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(dailyReport);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyReport\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Hourly;\nexport default Hourly;\nvar _c;\n$RefreshReg$(_c, \"Hourly\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Hourly","props","dailyReport","forecast","list","map","_ref","id","dt_txt","main","temp_max","temp_min","dateString","dateObject","Date","dayOfWeek","toLocaleDateString","weekday","time","split","console","log","time1","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Hourly.jsx"],"sourcesContent":["import React from 'react'\n\nconst Hourly = (props) => {\n    //mapping through the list array and destructuring it\n    const dailyReport = props.forecast.list.map(({ dt_txt, main: { temp_max, temp_min } }, id) => {\n        const dateString = dt_txt;\n        const dateObject = new Date(dateString);\n        const dayOfWeek = dateObject.toLocaleDateString('en-US', { weekday: 'long' }); // Get the day of the week as a string\n        const time = dt_txt.split(' ');\n        console.log(time[1])\n        const time1 = parseInt(time[1], 10)\n\n        console.log(dayOfWeek)\n        return (\n            <div>\n                <h4>{dayOfWeek}</h4>\n                <h4>{time1}</h4>\n                {time1 > 12 ? (<h4>{time1 - 12}pm</h4>) : time1 === 0 ? (<h4>12am</h4>) : (<h4>{time1}am</h4>)}\n\n                <h3>{temp_max}°F</h3>\n                <h3>{temp_min}°F</h3>\n\n\n            </div>\n        )\n\n    })\n\n\n    console.log(dailyReport)\n    return (\n\n        < div >\n\n            {dailyReport}\n\n        </div >\n    )\n}\n\nexport default Hourly"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACtB;EACA,MAAMC,WAAW,GAAGD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,CAAAC,IAAA,EAA2CC,EAAE,KAAK;IAAA,IAAjD;MAAEC,MAAM;MAAEC,IAAI,EAAE;QAAEC,QAAQ;QAAEC;MAAS;IAAE,CAAC,GAAAL,IAAA;IACjF,MAAMM,UAAU,GAAGJ,MAAM;IACzB,MAAMK,UAAU,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACvC,MAAMG,SAAS,GAAGF,UAAU,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAAC,CAAC;IAC/E,MAAMC,IAAI,GAAGV,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMI,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAEnCE,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;IACtB,oBACIhB,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAKT;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpB7B,OAAA;QAAAyB,QAAA,EAAKF;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACfN,KAAK,GAAG,EAAE,gBAAIvB,OAAA;QAAAyB,QAAA,GAAKF,KAAK,GAAG,EAAE,EAAC,IAAE;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,GAAIN,KAAK,KAAK,CAAC,gBAAIvB,OAAA;QAAAyB,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,gBAAK7B,OAAA;QAAAyB,QAAA,GAAKF,KAAK,EAAC,IAAE;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAE9F7B,OAAA;QAAAyB,QAAA,GAAKd,QAAQ,EAAC,OAAE;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACrB7B,OAAA;QAAAyB,QAAA,GAAKb,QAAQ,EAAC,OAAE;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGnB;EAGd,CAAC,CAAC;EAGFR,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC;EACxB,oBAEIH,OAAA;IAAAyB,QAAA,EAEKtB;EAAW;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAET;AAEf,CAAC;AAAAC,EAAA,GApCK7B,MAAM;AAsCZ,eAAeA,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}