{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport WeatherContext from '../context/WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = props => {\n  _s();\n  const {\n    forecast\n  } = useContext(WeatherContext);\n  console.log(forecast.list);\n  // creating an empty array to store date and min ,max temps\n  const result = Array(5).fill().map(() => Array(3).fill());\n  const findMinMax = () => {\n    forecast.list.forEach(l => {\n      const date = new Date(forecast.list.dt_txt.split(' ')[0]).toDateString();\n      const index = result.findIndex(item => item.date === date);\n      if (index === -1) {\n        result.push({\n          date: date,\n          min: l.main.temp_min,\n          max: l.main.temp_max\n        });\n      } else {\n        if (l.main.temp_min < result[index].min) {\n          result[index].min = l.main.temp_min;\n        }\n        if (l.main.temp_max < result[index].max) {\n          result[index].max = l.main.temp_max;\n        }\n      }\n    });\n    i = 0;\n    j = 0;\n    forecast.list.forEach(l => {\n      if (date === l.dt_txt) {\n        arr1[i][j] = l.dt_txt;\n        if (l.main.temp_min < min) {\n          min = l.main.temp_min;\n          arr1[i][j + 1] = min;\n        }\n        if (l.main.temp_max > max) {\n          max = l.main.temp_max;\n          arr1[i][j + 2] = max;\n        }\n      } else {\n        date = l.dt_txt;\n        min = l.main.temp_min;\n        max = l.main.temp_max;\n        i++;\n        j = 0;\n        arr1[i][j] = l.dt_txt;\n        arr1[i][j + 1] = min;\n        arr1[i][j + 2] = max;\n      }\n    });\n    console.log(arr1);\n  };\n  findMinMax();\n\n  //mapping through the list array and destructuring it\n  const dailyReport = arr1.map(a => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDetails\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [Math.round(max), \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [Math.round(min), \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyReport\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Example, \"Xa2N6ZdxHNRl/VsaRoRqreVrUQM=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","useContext","WeatherContext","jsxDEV","_jsxDEV","Example","props","_s","forecast","console","log","list","result","Array","fill","map","findMinMax","forEach","l","date","Date","dt_txt","split","toDateString","index","findIndex","item","push","min","main","temp_min","max","temp_max","i","j","arr1","dailyReport","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport WeatherContext from '../context/WeatherContext'\n\nconst Example = (props) => {\n    const { forecast } = useContext(WeatherContext)\n    console.log(forecast.list)\n    // creating an empty array to store date and min ,max temps\n    const result = Array(5).fill().map(() => Array(3).fill())\n    const findMinMax = () => {\n        forecast.list.forEach(l => {\n            const date = new Date(forecast.list.dt_txt.split(' ')[0]).toDateString();\n            const index = result.findIndex(item => item.date === date)\n            if (index === -1) {\n                result.push({\n                    date: date,\n                    min: l.main.temp_min,\n                    max: l.main.temp_max\n                });\n            }\n            else {\n                if (l.main.temp_min < result[index].min) {\n                    result[index].min = l.main.temp_min;\n                }\n                if (l.main.temp_max < result[index].max) {\n                    result[index].max = l.main.temp_max;\n                }\n\n            }\n        })\n\n        i = 0;\n        j = 0;\n\n        forecast.list.forEach(l => {\n            if (date === l.dt_txt) {\n                arr1[i][j] = l.dt_txt\n                if (l.main.temp_min < min) {\n                    min = l.main.temp_min\n                    arr1[i][j + 1] = min\n\n                }\n                if (l.main.temp_max > max) {\n                    max = l.main.temp_max\n                    arr1[i][j + 2] = max\n                }\n\n            }\n            else {\n                date = l.dt_txt\n                min = l.main.temp_min\n                max = l.main.temp_max\n                i++;\n                j = 0;\n                arr1[i][j] = l.dt_txt\n                arr1[i][j + 1] = min\n                arr1[i][j + 2] = max\n            }\n\n        })\n        console.log(arr1)\n    }\n\n    findMinMax();\n\n    //mapping through the list array and destructuring it\n    const dailyReport = arr1.map((a) => {\n\n\n\n        return (\n\n            <div className=\"weatherDetails\">\n                <div className='date-temp'>\n                    <h4>{date}</h4>\n\n                    <h3>{Math.round(max)}°F</h3>\n                    <h3>{Math.round(min)}°F</h3>\n                </div>\n\n            </div>\n        )\n\n    })\n\n    return (\n        < div >\n            {dailyReport}\n        </div >\n    )\n\n\n}\n\nexport default Example"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}