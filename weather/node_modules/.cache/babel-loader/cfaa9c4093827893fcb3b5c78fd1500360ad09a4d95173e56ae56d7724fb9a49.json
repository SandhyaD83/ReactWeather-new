{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Hourly.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hourly = props => {\n  console.log(props.forecast.list);\n\n  //mapping through the list array and destructuring it\n  const dailyReport = props.forecast.list.map((_ref, id) => {\n    let {\n      dt_txt,\n      main: {\n        temp\n      },\n      weather,\n      wind: {\n        speed\n      }\n    } = _ref;\n    const date = new Date(dt_txt.split(' ')[0]).toDateString();\n\n    // splits and only takes time from dt_txt and converts string to whole number \n    const time = parseInt(dt_txt.split(' ')[1], 10);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), time > 12 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [time - 12, \"pm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 31\n      }, this) : time === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"12am\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 71\n      }, this) : time === 12 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"12pm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 103\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [time, \"am\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 121\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [Math.round(temp), \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/w/${weather[0].icon}.png`,\n        alt: \"\",\n        className: \"weather-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://png.pngtree.com/png-vector/20190418/ourlarge/pngtree-vector-wind-icon-png-image_956094.jpg\",\n        alt: \"\",\n        className: \"wind-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.round(speed), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(dailyReport);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyReport\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = Hourly;\nexport default Hourly;\nvar _c;\n$RefreshReg$(_c, \"Hourly\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hourly","props","console","log","forecast","list","dailyReport","map","_ref","id","dt_txt","main","temp","weather","wind","speed","date","Date","split","toDateString","time","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","src","icon","alt","className","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Hourly.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nconst Hourly = (props) => {\n    console.log(props.forecast.list)\n\n\n    //mapping through the list array and destructuring it\n    const dailyReport = props.forecast.list.map(({ dt_txt, main: { temp }, weather, wind: { speed } }, id) => {\n\n        const date = new Date(dt_txt.split(' ')[0]).toDateString();\n\n        // splits and only takes time from dt_txt and converts string to whole number \n        const time = parseInt(dt_txt.split(' ')[1], 10);\n\n        return (\n            <div>\n                <h4>{date}</h4>\n                <hr />\n                {time > 12 ? (<h4>{time - 12}pm</h4>) : time === 0 ? (<h4>12am</h4>) : time === 12 ? (<h4>12pm</h4>) : (<h4>{time}am</h4>)}\n                <h3>{Math.round(temp)}Â°F</h3>\n                <img src={`https://openweathermap.org/img/w/${weather[0].icon}.png`} alt=\"\" className='weather-image' />\n                <p>{weather[0].main}</p>\n                <img src=\"https://png.pngtree.com/png-vector/20190418/ourlarge/pngtree-vector-wind-icon-png-image_956094.jpg\" alt=\"\" className='wind-image' />\n                <p>{Math.round(speed)} </p>\n            </div>\n        )\n\n    })\n\n\n    console.log(dailyReport)\n    return (\n\n        < div >\n\n            {dailyReport}\n\n        </div >\n    )\n}\n\nexport default Hourly"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}