{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = props => {\n  const {\n    dt_txt,\n    main: temp\n  } = props.forecast.list;\n  const dailyTemperatures = {};\n  props.forecast.list.forEach(item => {\n    const date = new Date(item.dt_txt.split(' ')[0]).toDateString();\n    console.log(dailyTemperatures[date]);\n    if (!dailyTemperatures[date]) {\n      dailyTemperatures[date] = {\n        date,\n        hourlyTemperatures: [],\n        temp_min: item.main.temp_min,\n        temp_max: item.main.temp_max\n      };\n    } else {\n      if (item.main.temp_min < dailyTemperatures[date].temp_min) {\n        dailyTemperatures[date].temp_min = item.main.temp_min;\n      }\n      if (item.main.temp_max > dailyTemperatures[date].temp_max) {\n        dailyTemperatures[date].temp_max = item.main.temp_max;\n      }\n    }\n    dailyTemperatures[date].hourlyTemperatures.push({\n      time: item.dt_txt.split(' ')[1],\n      temp: item.main.temp\n    });\n  });\n  console.log(Object.values(dailyTemperatures));\n  const display = dailyTemperatures.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: d.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: d.hourlyTemparatures.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: d.temp_max\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: d.temp_min\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Example","props","dt_txt","main","temp","forecast","list","dailyTemperatures","forEach","item","date","Date","split","toDateString","console","log","hourlyTemperatures","temp_min","temp_max","push","time","Object","values","display","map","d","children","fileName","_jsxFileName","lineNumber","columnNumber","hourlyTemparatures","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx"],"sourcesContent":["import React from 'react'\n\nconst Example = (props) => {\n    const {\n        dt_txt,\n        main: temp\n    } = props.forecast.list\n\n    const dailyTemperatures = {};\n\n    props.forecast.list.forEach((item) => {\n        const date = new Date(item.dt_txt.split(' ')[0]).toDateString();\n        console.log(dailyTemperatures[date])\n        if (!dailyTemperatures[date]) {\n            dailyTemperatures[date] = {\n                date,\n                hourlyTemperatures: [],\n                temp_min: item.main.temp_min,\n                temp_max: item.main.temp_max\n            };\n        } else {\n            if (item.main.temp_min < dailyTemperatures[date].temp_min) {\n                dailyTemperatures[date].temp_min = item.main.temp_min;\n            }\n            if (item.main.temp_max > dailyTemperatures[date].temp_max) {\n                dailyTemperatures[date].temp_max = item.main.temp_max;\n            }\n        }\n\n        dailyTemperatures[date].hourlyTemperatures.push({\n            time: item.dt_txt.split(' ')[1],\n            temp: item.main.temp\n        });\n    });\n\n    console.log(Object.values(dailyTemperatures));\n    const display = dailyTemperatures.map((d) => {\n        return (\n            <div>\n                <h3>{d.date}</h3>\n                <h3>{d.hourlyTemparatures.time}</h3>\n                <h3>{d.temp_max}</h3>\n                <h3>{d.temp_min}</h3>\n            </div>\n        )\n    })\n    return (\n        <div>\n            <h3>{display}</h3>\n        </div>\n    )\n}\n\nexport default Example"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}