{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport WeatherContext from '../context/WeatherContext';\nconst Example = props => {\n  _s();\n  const {\n    forecast\n  } = useContext(WeatherContext);\n\n  // creating an empty array to store date and min ,max temps\n  const result = [];\n  console.log(result);\n  const findMinMax = () => {\n    forecast.list.forEach(l => {\n      const date = new Date(l.dt_txt.split(' ')[0]).toDateString();\n      const index = result.findIndex(item => item.date === date);\n      if (index === -1) {\n        result.push({\n          date: date,\n          min: l.main.temp_min,\n          max: l.main.temp_max\n        });\n      } else {\n        if (l.main.temp_min < result[index].min) {\n          result[index].min = l.main.temp_min;\n        }\n        if (l.main.temp_max < result[index].max) {\n          result[index].max = l.main.temp_max;\n        }\n      }\n    });\n    console.log(result);\n    return result;\n  };\n  findMinMax();\n};\n_s(Example, \"Xa2N6ZdxHNRl/VsaRoRqreVrUQM=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","useContext","WeatherContext","Example","props","_s","forecast","result","console","log","findMinMax","list","forEach","l","date","Date","dt_txt","split","toDateString","index","findIndex","item","push","min","main","temp_min","max","temp_max","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport WeatherContext from '../context/WeatherContext'\n\nconst Example = (props) => {\n    const { forecast } = useContext(WeatherContext)\n\n\n    // creating an empty array to store date and min ,max temps\n    const result = []\n    console.log(result)\n    const findMinMax = () => {\n        forecast.list.forEach(l => {\n            const date = new Date(l.dt_txt.split(' ')[0]).toDateString();\n            const index = result.findIndex(item => item.date === date)\n            if (index === -1) {\n                result.push({\n                    date: date,\n                    min: l.main.temp_min,\n                    max: l.main.temp_max\n                });\n\n            }\n            else {\n                if (l.main.temp_min < result[index].min) {\n                    result[index].min = l.main.temp_min;\n                }\n                if (l.main.temp_max < result[index].max) {\n                    result[index].max = l.main.temp_max;\n                }\n\n            }\n        })\n\n        console.log(result)\n        return result;\n    }\n\n    findMinMax();\n\n\n\n\n}\n\nexport default Example"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,cAAc,MAAM,2BAA2B;AAEtD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAGL,UAAU,CAACC,cAAc,CAAC;;EAG/C;EACA,MAAMK,MAAM,GAAG,EAAE;EACjBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrBJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,CAAC,IAAI;MACvB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,YAAY,EAAE;MAC5D,MAAMC,KAAK,GAAGZ,MAAM,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACP,IAAI,KAAKA,IAAI,CAAC;MAC1D,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;QACdZ,MAAM,CAACe,IAAI,CAAC;UACRR,IAAI,EAAEA,IAAI;UACVS,GAAG,EAAEV,CAAC,CAACW,IAAI,CAACC,QAAQ;UACpBC,GAAG,EAAEb,CAAC,CAACW,IAAI,CAACG;QAChB,CAAC,CAAC;MAEN,CAAC,MACI;QACD,IAAId,CAAC,CAACW,IAAI,CAACC,QAAQ,GAAGlB,MAAM,CAACY,KAAK,CAAC,CAACI,GAAG,EAAE;UACrChB,MAAM,CAACY,KAAK,CAAC,CAACI,GAAG,GAAGV,CAAC,CAACW,IAAI,CAACC,QAAQ;QACvC;QACA,IAAIZ,CAAC,CAACW,IAAI,CAACG,QAAQ,GAAGpB,MAAM,CAACY,KAAK,CAAC,CAACO,GAAG,EAAE;UACrCnB,MAAM,CAACY,KAAK,CAAC,CAACO,GAAG,GAAGb,CAAC,CAACW,IAAI,CAACG,QAAQ;QACvC;MAEJ;IACJ,CAAC,CAAC;IAEFnB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAOA,MAAM;EACjB,CAAC;EAEDG,UAAU,EAAE;AAKhB,CAAC;AAAAL,EAAA,CAvCKF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAyCb,eAAeA,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}