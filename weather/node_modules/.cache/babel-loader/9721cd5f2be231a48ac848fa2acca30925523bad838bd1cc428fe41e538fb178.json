{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/Search';\nimport Today from './components/Today';\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useContext } from 'react';\nimport Hourly from './components/Hourly';\nimport Example from './components/Example';\nimport WeatherContext from './context/WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // //defining a Array variable to store weather data\n  // const [weather, setWeather] = useState({})\n\n  // const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\"\n  // //function to fetch data from weather using api and store it in the variable weather\n  // const getWeather = async (searchTerm) => {\n  //   try {\n  //     const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`)\n  //     const data = await response.json();\n  //     console.log(data)\n  //     setWeather(data)\n  //     setStr(\"nothing\")\n  //   }\n  //   catch (e) {\n  //     console.error(e)\n  //   }\n\n  // }\n  // console.log(weather)\n\n  // const [str, setStr] = useState('')\n  // const [forecast, setForecast] = useState({})\n  // //function to fetch daily forecast of the selected city using lat and lon values\n  // const getForecast = async (btnName) => {\n  //   try {\n  //     const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`)\n  //     const forecastData = await response.json();\n  //     console.log(forecastData)\n  //     setForecast(forecastData)\n\n  //     setStr(btnName)\n  //   }\n  //   catch (e) {\n  //     console.error(e)\n  //   }\n\n  // }\n  // //Intially renders London weather\n  // useEffect(() => { getWeather(\"london\"); }, [])\n  // console.log(forecast)\n  const {\n    weather1,\n    str\n  } = useContext(WeatherContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), weather1.main ? /*#__PURE__*/_jsxDEV(Today, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      txt: \"Hourly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      txt: \"Daily\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      txt: \"Weekend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), str === \"Hourly\" ? /*#__PURE__*/_jsxDEV(Hourly, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }, this) : null, str === \"Daily\" ? /*#__PURE__*/_jsxDEV(Daily, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this) : null, str === \"Weekend\" ? /*#__PURE__*/_jsxDEV(Weekend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ewKXBo0bKN0wyg3z+DZQkr5sQzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Today","Button","Daily","Weekend","useContext","Hourly","Example","WeatherContext","jsxDEV","_jsxDEV","App","_s","weather1","str","className","children","fileName","_jsxFileName","lineNumber","columnNumber","main","txt","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/App.js"],"sourcesContent":["\nimport './App.css';\n\nimport Search from './components/Search'\nimport Today from './components/Today'\nimport Button from './components/Button';\nimport Daily from './components/Daily';\nimport Weekend from './components/Weekend';\nimport { useContext } from 'react'\nimport Hourly from './components/Hourly';\nimport Example from './components/Example';\nimport WeatherContext from './context/WeatherContext';\n\n\n\n\nfunction App() {\n\n  // //defining a Array variable to store weather data\n  // const [weather, setWeather] = useState({})\n\n  // const apiKey = \"77d6cae8ed4f306976db5aa9ea844e15\"\n  // //function to fetch data from weather using api and store it in the variable weather\n  // const getWeather = async (searchTerm) => {\n  //   try {\n  //     const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&appid=${apiKey}&units=imperial`)\n  //     const data = await response.json();\n  //     console.log(data)\n  //     setWeather(data)\n  //     setStr(\"nothing\")\n  //   }\n  //   catch (e) {\n  //     console.error(e)\n  //   }\n\n  // }\n  // console.log(weather)\n\n\n\n  // const [str, setStr] = useState('')\n  // const [forecast, setForecast] = useState({})\n  // //function to fetch daily forecast of the selected city using lat and lon values\n  // const getForecast = async (btnName) => {\n  //   try {\n  //     const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${apiKey}&units=imperial`)\n  //     const forecastData = await response.json();\n  //     console.log(forecastData)\n  //     setForecast(forecastData)\n\n  //     setStr(btnName)\n  //   }\n  //   catch (e) {\n  //     console.error(e)\n  //   }\n\n  // }\n  // //Intially renders London weather\n  // useEffect(() => { getWeather(\"london\"); }, [])\n  // console.log(forecast)\n  const { weather1, str } = useContext(WeatherContext)\n  return (\n\n\n    <div className=\"App\">\n\n      <Search />\n      {weather1.main ? <Today /> : null}\n      {/* <Button getForecast={getForecast} txt=\"Example\" /> */}\n      <Button txt=\"Hourly\" />\n      <Button txt=\"Daily\" />\n      <Button txt=\"Weekend\" />\n      {/* {str === \"Example\" ? (<Example forecast={forecast} />) : null} */}\n      {str === \"Hourly\" ? (<Hourly />) : null}\n      {str === \"Daily\" ? (<Daily />) : null}\n      {str === \"Weekend\" ? (<Weekend />) : null}\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAElB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,cAAc,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAI,CAAC,GAAGT,UAAU,CAACG,cAAc,CAAC;EACpD,oBAGEE,OAAA;IAAKK,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBN,OAAA,CAACV,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACTP,QAAQ,CAACQ,IAAI,gBAAGX,OAAA,CAACT,KAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAG,IAAI,eAEjCV,OAAA,CAACR,MAAM;MAACoB,GAAG,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvBV,OAAA,CAACR,MAAM;MAACoB,GAAG,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtBV,OAAA,CAACR,MAAM;MAACoB,GAAG,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAEvBN,GAAG,KAAK,QAAQ,gBAAIJ,OAAA,CAACJ,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAI,IAAI,EACtCN,GAAG,KAAK,OAAO,gBAAIJ,OAAA,CAACP,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAI,IAAI,EACpCN,GAAG,KAAK,SAAS,gBAAIJ,OAAA,CAACN,OAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAI,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAOrC;AAEV;AAACR,EAAA,CApEQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}