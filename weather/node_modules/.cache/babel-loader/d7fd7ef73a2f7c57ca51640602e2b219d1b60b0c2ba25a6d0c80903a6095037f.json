{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport WeatherContext from '../context/WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = props => {\n  _s();\n  const {\n    forecast\n  } = useContext(WeatherContext);\n  console.log(forecast.list);\n  forecast.list.forEach(l => {\n    const date = new Date(l.dt_txt.split(' ')[0]).toDateString();\n    l.dt_txt = date;\n  });\n  let date = forecast.list[0].dt_txt;\n  let min = forecast.list[0].main.temp_min;\n  let max = forecast.list[0].main.temp_max;\n  let i = 0;\n  let j = 0;\n  const arr1 = Array(5).fill().map(() => Array(3).fill());\n  const findMinMax = () => {\n    i = 0;\n    j = 0;\n    forecast.list.forEach(l => {\n      if (date === l.dt_txt) {\n        arr1[i][j] = l.dt_txt;\n        if (l.main.temp_min < min) {\n          min = l.main.temp_min;\n          arr1[i][j + 1] = min;\n        }\n        if (l.main.temp_max > max) {\n          max = l.main.temp_max;\n          arr1[i][j + 2] = max;\n        }\n      } else {\n        date = l.dt_txt;\n        min = l.main.temp_min;\n        max = l.main.temp_max;\n        i++;\n        j = 0;\n        arr1[i][j] = l.dt_txt;\n        arr1[i][j + 1] = min;\n        arr1[i][j + 2] = max;\n      }\n    });\n    console.log(arr1);\n  };\n  findMinMax();\n\n  //mapping through the list array and destructuring it\n  const dailyReport = arr1.map(a => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDetails\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [Math.round(max), \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [Math.round(min), \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyReport\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Example, \"Xa2N6ZdxHNRl/VsaRoRqreVrUQM=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","useContext","WeatherContext","jsxDEV","_jsxDEV","Example","props","_s","forecast","console","log","list","forEach","l","date","Date","dt_txt","split","toDateString","min","main","temp_min","max","temp_max","i","j","arr1","Array","fill","map","findMinMax","dailyReport","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Example.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport WeatherContext from '../context/WeatherContext'\n\nconst Example = (props) => {\n    const { forecast } = useContext(WeatherContext)\n    console.log(forecast.list)\n    forecast.list.forEach((l) => {\n        const date = new Date(l.dt_txt.split(' ')[0]).toDateString();\n        l.dt_txt = date\n    })\n    let date = forecast.list[0].dt_txt\n    let min = forecast.list[0].main.temp_min\n    let max = forecast.list[0].main.temp_max\n    let i = 0;\n    let j = 0;\n    const arr1 = Array(5).fill().map(() => Array(3).fill())\n    const findMinMax = () => {\n\n        i = 0;\n        j = 0;\n\n        forecast.list.forEach(l => {\n            if (date === l.dt_txt) {\n                arr1[i][j] = l.dt_txt\n                if (l.main.temp_min < min) {\n                    min = l.main.temp_min\n                    arr1[i][j + 1] = min\n\n                }\n                if (l.main.temp_max > max) {\n                    max = l.main.temp_max\n                    arr1[i][j + 2] = max\n                }\n\n            }\n            else {\n                date = l.dt_txt\n                min = l.main.temp_min\n                max = l.main.temp_max\n                i++;\n                j = 0;\n                arr1[i][j] = l.dt_txt\n                arr1[i][j + 1] = min\n                arr1[i][j + 2] = max\n            }\n\n        })\n        console.log(arr1)\n    }\n\n    findMinMax();\n\n    //mapping through the list array and destructuring it\n    const dailyReport = arr1.map((a) => {\n\n\n\n        return (\n\n            <div className=\"weatherDetails\">\n                <div className='date-temp'>\n                    <h4>{date}</h4>\n\n                    <h3>{Math.round(max)}°F</h3>\n                    <h3>{Math.round(min)}°F</h3>\n                </div>\n\n            </div>\n        )\n\n    })\n\n    return (\n        < div >\n            {dailyReport}\n        </div >\n    )\n\n\n}\n\nexport default Example"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}