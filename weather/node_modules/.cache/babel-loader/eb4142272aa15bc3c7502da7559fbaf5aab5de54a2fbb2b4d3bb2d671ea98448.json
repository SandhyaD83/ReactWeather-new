{"ast":null,"code":"var _jsxFileName = \"/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Daily.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Daily = props => {\n  console.log(props.forecast.list);\n\n  // const dailyReport1 = props.forecast.list.map((l, id) => {\n  //     const dateString = l.dt_txt;\n  //     const dateObject = new Date(dateString);\n  //     const dayOfWeek = dateObject.toLocaleDateString('en-US', { weekday: 'long' }); // Get the day of the week as a string\n  //     console.log(dayOfWeek)\n  //     return (\n  //         <div>\n  //             <h4>{dayOfWeek}</h4>\n\n  //             <h3>{l.main.temp_max}째F</h3>\n  //             <h3>{l.main.temp_min}째F</h3>\n\n  //         </div>\n  //     )\n\n  // })\n\n  const dailyReport = props.forecast.list.reduce((prev, current) => {\n    const prevDay = prev.dt_txt;\n    const prevdateObject = new Date(prevDay);\n    const prevdayOfWeek = prevdateObject.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }); // Get the day of the week as a string\n    console.log(prevdayOfWeek);\n    const currentDay = current.dt_txt;\n    const currentdateObject = new Date(currentDay);\n    const currentdayOfWeek = currentdateObject.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }); // Get the day of the week as a string\n    console.log(currentdayOfWeek);\n    return prevdayOfWeek === currentdayOfWeek && prev.main.temp_max > current.main.temp_max ? prev : current;\n  });\n  console.log(dailyReport);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: dailyReport.dt_txt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dailyReport.main.temp_max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = Daily;\nexport default Daily;\nvar _c;\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Daily","props","console","log","forecast","list","dailyReport","reduce","prev","current","prevDay","dt_txt","prevdateObject","Date","prevdayOfWeek","toLocaleDateString","weekday","currentDay","currentdateObject","currentdayOfWeek","main","temp_max","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sandhya/Desktop/Perscholas-repos/React-weather/weather/src/components/Daily.jsx"],"sourcesContent":["import React from 'react'\n\nconst Daily = (props) => {\n    console.log(props.forecast.list)\n\n\n\n    // const dailyReport1 = props.forecast.list.map((l, id) => {\n    //     const dateString = l.dt_txt;\n    //     const dateObject = new Date(dateString);\n    //     const dayOfWeek = dateObject.toLocaleDateString('en-US', { weekday: 'long' }); // Get the day of the week as a string\n    //     console.log(dayOfWeek)\n    //     return (\n    //         <div>\n    //             <h4>{dayOfWeek}</h4>\n\n    //             <h3>{l.main.temp_max}째F</h3>\n    //             <h3>{l.main.temp_min}째F</h3>\n\n    //         </div>\n    //     )\n\n    // })\n\n    const dailyReport = props.forecast.list.reduce((prev, current) => {\n        const prevDay = prev.dt_txt;\n        const prevdateObject = new Date(prevDay);\n        const prevdayOfWeek = prevdateObject.toLocaleDateString('en-US', { weekday: 'long' }); // Get the day of the week as a string\n        console.log(prevdayOfWeek)\n        const currentDay = current.dt_txt;\n        const currentdateObject = new Date(currentDay);\n        const currentdayOfWeek = currentdateObject.toLocaleDateString('en-US', { weekday: 'long' }); // Get the day of the week as a string\n        console.log(currentdayOfWeek)\n\n        return prevdayOfWeek === currentdayOfWeek && prev.main.temp_max > current.main.temp_max ? prev : current;\n\n\n\n    })\n    console.log(dailyReport)\n    return (\n\n        < div >\n            <p>{dailyReport.dt_txt}</p>\n            <p>{dailyReport.main.temp_max}</p>\n            {/* {dailyReport1} */}\n        </div >\n    )\n}\n\nexport default Daily\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAACC,IAAI,CAAC;;EAIhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAEA,MAAMC,WAAW,GAAGL,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAK;IAC9D,MAAMC,OAAO,GAAGF,IAAI,CAACG,MAAM;IAC3B,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACH,OAAO,CAAC;IACxC,MAAMI,aAAa,GAAGF,cAAc,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAAC,CAAC;IACvFd,OAAO,CAACC,GAAG,CAACW,aAAa,CAAC;IAC1B,MAAMG,UAAU,GAAGR,OAAO,CAACE,MAAM;IACjC,MAAMO,iBAAiB,GAAG,IAAIL,IAAI,CAACI,UAAU,CAAC;IAC9C,MAAME,gBAAgB,GAAGD,iBAAiB,CAACH,kBAAkB,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAAC,CAAC;IAC7Fd,OAAO,CAACC,GAAG,CAACgB,gBAAgB,CAAC;IAE7B,OAAOL,aAAa,KAAKK,gBAAgB,IAAIX,IAAI,CAACY,IAAI,CAACC,QAAQ,GAAGZ,OAAO,CAACW,IAAI,CAACC,QAAQ,GAAGb,IAAI,GAAGC,OAAO;EAI5G,CAAC,CAAC;EACFP,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;EACxB,oBAEIP,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAIhB,WAAW,CAACK;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3B3B,OAAA;MAAAuB,QAAA,EAAIhB,WAAW,CAACc,IAAI,CAACC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE/B;AAEf,CAAC;AAAAC,EAAA,GA9CK3B,KAAK;AAgDX,eAAeA,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}